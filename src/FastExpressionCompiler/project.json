{
  "version": "1.0.1",

  "buildOptions": {
    "warningsAsErrors": true,
    "xmlDoc": true
  },

  "packOptions": {
    "summary": "Fast Expression Compiler is ~20x faster than `Expression.Compile()`",
    "copyright": "Copyright © 2016 Maksim Volkau",
    "owners": [ "Maksim Volkau" ],
    "licenseUrl": "http://opensource.org/licenses/MIT",
    "projectUrl": "https://github.com/dadhi/FastExpressionCompiler",
    "tags": [ "Expression", "ExpressionTree", "Compile", "DynamicMethod", "ILEmit", "DryIoc", "ExpressionToCodeLib" ],

    "releaseNotes": "fixed: #6: When number of items in closure greater than 10, unable to load closed parameter of value type; fixed: #7: InvalidCastException for enum constant of unsigned type;"
  },

  "frameworks": {
    "netstandard1.3": {
      "dependencies": {
        "NETStandard.Library": "1.6.1",
        "System.Reflection.Emit.Lightweight": "4.3.0"
      }
    }, 

    "net452": {
      "frameworkAssemblies": {
        "System.Reflection": "",
        "System.Linq": "",
        "System.Linq.Expressions": ""
      }
    }
  }
}

